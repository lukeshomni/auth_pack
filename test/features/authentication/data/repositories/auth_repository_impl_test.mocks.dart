// Mocks generated by Mockito 5.3.2 from annotations
// in authentication/test/features/authentication/data/repositories/auth_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:authentication/features/authentication/data/data_sources/auth_local_datasource.dart'
    as _i7;
import 'package:authentication/features/authentication/data/data_sources/auth_remote_datasource.dart'
    as _i3;
import 'package:authentication/features/authentication/data/data_sources/login/login.dart'
    as _i5;
import 'package:authentication/features/authentication/data/data_sources/sign_up/sign_up.dart'
    as _i6;
import 'package:authentication/features/authentication/data/models/app_user_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAppUserModel_0 extends _i1.SmartFake implements _i2.AppUserModel {
  _FakeAppUserModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRemoteDataSource extends _i1.Mock
    implements _i3.AuthRemoteDataSource {
  MockAuthRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.AppUserModel> logIn({
    required _i5.LoginMethod? loginMethod,
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logIn,
          [],
          {
            #loginMethod: loginMethod,
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i4.Future<_i2.AppUserModel>.value(_FakeAppUserModel_0(
          this,
          Invocation.method(
            #logIn,
            [],
            {
              #loginMethod: loginMethod,
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i4.Future<_i2.AppUserModel>);
  @override
  _i4.Future<_i2.AppUserModel> signUp({
    required _i6.SignUpMethod? signUpMethod,
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [],
          {
            #signUpMethod: signUpMethod,
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i4.Future<_i2.AppUserModel>.value(_FakeAppUserModel_0(
          this,
          Invocation.method(
            #signUp,
            [],
            {
              #signUpMethod: signUpMethod,
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i4.Future<_i2.AppUserModel>);
}

/// A class which mocks [AuthLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthLocalDataSource extends _i1.Mock
    implements _i7.AuthLocalDataSource {
  MockAuthLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.AppUserModel> getUser() => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue: _i4.Future<_i2.AppUserModel>.value(_FakeAppUserModel_0(
          this,
          Invocation.method(
            #getUser,
            [],
          ),
        )),
      ) as _i4.Future<_i2.AppUserModel>);
  @override
  _i4.Future<void> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
